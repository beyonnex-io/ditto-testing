mongoDB.uri = ${?MONGODB_URI}

setup.http.proxy {
  enabled = false
  enabled = ${?PROXY_ENABLED}
}

gateway {
  devops-context-path = devops
  hostname = ${default.hostname}
  hostname = ${?DEFAULT_HOSTNAME}

  url = "https://"${gateway.hostname}
  ws-url = "wss://"${gateway.hostname}

  devops {
    url = ${gateway.url}/${gateway.devops-context-path}
    command-timeout = 30s

    auth.enabled = true
  }
  basic-auth {
    enabled = false
    enabled = ${?BASIC_AUTH_ENABLED}

    username = "ditto"
    username = ${?BASIC_AUTH_USERNAME}

    password = "ditto"
    password = ${?BASIC_AUTH_PASSWORD}
  }
}

oauth-mock {
  hostname = ${docker.gateway.host}
  hostname = ${?OAUTH_MOCK_HOSTNAME}

  port = ${?OAUTH_MOCK_PORT}
  tokenEndpoint = ${?OAUTH_MOCK_ENDPOINT}
}

oauth {
    tokenEndpoint = ${?OAUTH_TOKEN_ENDPOINT}
    issuer = ${?OAUTH_ISSUER}

    clientId = ${?OAUTH_CLIENT_ID}
    clientSecret = ${?OAUTH_CLIENT_SECRET}
    clientScope = ${?OAUTH_CLIENT_SCOPE}

    client2Id = ${?OAUTH_CLIENT2_ID}
    client2Secret = ${?OAUTH_CLIENT2_SECRET}
    client2Scope = ${?OAUTH_CLIENT2_SCOPE}

    client3Id = ${?OAUTH_CLIENT3_ID}
    client3Secret = ${?OAUTH_CLIENT3_SECRET}
    client3Scope = ${?OAUTH_CLIENT3_SCOPE}

    client4Id = ${?OAUTH_CLIENT4_ID}
    client4Secret = ${?OAUTH_CLIENT4_SECRET}
    client4Scope = ${?OAUTH_CLIENT4_SCOPE}
}

